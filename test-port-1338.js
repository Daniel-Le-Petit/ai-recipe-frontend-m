const API_URL = 'http://localhost:1338';

console.log('üîç Test de l\'API sur le port 1338');
console.log('==================================');

async function testPort1338() {
  try {
    // Test 1: V√©rifier que Strapi r√©pond sur le port 1338
    console.log('\n1Ô∏è‚É£ Test de r√©ponse Strapi sur le port 1338...');
    const response = await fetch(`${API_URL}/api/recipie?populate=*`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Strapi r√©pond correctement sur le port 1338');
      console.log(`üìä Nombre de recettes: ${data.data?.length || 0}`);
    } else {
      console.log(`‚ùå Erreur HTTP: ${response.status} ${response.statusText}`);
    }
    
    // Test 2: V√©rifier l'endpoint des cat√©gories
    console.log('\n2Ô∏è‚É£ Test des cat√©gories...');
    const categoriesResponse = await fetch(`${API_URL}/api/recipie-categories?populate=*`);
    
    if (categoriesResponse.ok) {
      const categoriesData = await categoriesResponse.json();
      console.log(`‚úÖ Cat√©gories: ${categoriesData.data?.length || 0} trouv√©es`);
    } else {
      console.log(`‚ùå Erreur cat√©gories: ${categoriesResponse.status}`);
    }
    
    // Test 3: V√©rifier l'interface admin
    console.log('\n3Ô∏è‚É£ Test de l\'interface admin...');
    const adminResponse = await fetch(`${API_URL}/admin`);
    
    if (adminResponse.ok) {
      console.log('‚úÖ Interface admin accessible');
    } else {
      console.log(`‚ùå Interface admin: ${adminResponse.status}`);
    }
    
    console.log('\nüéâ Tests termin√©s !');
    console.log('‚úÖ Tous les endpoints fonctionnent sur le port 1338');
    
  } catch (error) {
    console.error('\n‚ùå Erreur de connexion:', error.message);
    console.error('\nüîß Solutions possibles:');
    console.error('   1. V√©rifiez que Strapi est d√©marr√© sur le port 1338');
    console.error('   2. V√©rifiez que la base de donn√©es est accessible');
    console.error('   3. V√©rifiez les variables d\'environnement');
  }
}

testPort1338(); 